-- Tabela de configurações para alterar atributos do personagem no Anime Dimensions
local playerSettings = {
    movementSpeed = {enabled = true, value = 100},   -- Velocidade de movimento (padrão 100)
    jumpHeight = {enabled = true, value = 150},      -- Altura do pulo (padrão 150)
    gravity = {enabled = true, value = 50},          -- Gravidade (padrão 50)
    skillCooldown = {enabled = true, value = 0.1},   -- Cooldown das habilidades (padrão 0.1 segundos)
}

-- Função para aplicar as alterações no personagem
local function applyCharacterSettings(player)
    local character = player.Character
    if not character or not character:FindFirstChild("Humanoid") then
        return
    end

    local humanoid = character:FindFirstChild("Humanoid")
    
    -- Alterar a velocidade de movimento
    if playerSettings.movementSpeed.enabled then
        humanoid.WalkSpeed = playerSettings.movementSpeed.value
    end
    
    -- Alterar a altura do pulo
    if playerSettings.jumpHeight.enabled then
        humanoid.JumpHeight = playerSettings.jumpHeight.value
    end

    -- Alterar a gravidade
    if playerSettings.gravity.enabled then
        game:GetService("Workspace").Gravity = playerSettings.gravity.value
    end

    -- Alterar o cooldown das skills
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local skills = replicatedStorage:FindFirstChild("Skills")
    if skills and playerSettings.skillCooldown.enabled then
        for _, skill in pairs(skills:GetChildren()) do
            if skill:IsA("StringValue") then
                local cooldown = skill:FindFirstChild("Cooldown")
                if cooldown then
                    cooldown.Value = playerSettings.skillCooldown.value
                end
            end
        end
    end
end

-- Função para alterar configurações dinamicamente
local function updateSettings(setting, value)
    if playerSettings[setting] then
        playerSettings[setting].enabled = value
        print("Configuração alterada: " .. setting .. " = " .. tostring(value))
        
        -- Aplicar as novas configurações imediatamente
        local player = game.Players.LocalPlayer
        applyCharacterSettings(player)
    else
        warn("Configuração não válida!")
    end
end

-- Função para criar a GUI de opções
local function createOptionsGUI(player)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 200)
    frame.Position = UDim2.new(0.5, -150, 0.5, -100)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.Parent = screenGui

    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Parent = frame

    -- Criar um botão para ativar/desativar a velocidade de movimento
    local speedButton = Instance.new("TextButton")
    speedButton.Size = UDim2.new(0, 250, 0, 30)
    speedButton.Position = UDim2.new(0, 25, 0, 10)
    speedButton.Text = "Ativar Velocidade de Movimento"
    speedButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    speedButton.Parent = frame

    speedButton.MouseButton1Click:Connect(function()
        playerSettings.movementSpeed.enabled = not playerSettings.movementSpeed.enabled
        speedButton.Text = playerSettings.movementSpeed.enabled and "Ativar Velocidade de Movimento" or "Desativar Velocidade de Movimento"
        applyCharacterSettings(player)
    end)

    -- Criar um botão para ativar/desativar o pulo
    local jumpButton = Instance.new("TextButton")
    jumpButton.Size = UDim2.new(0, 250, 0, 30)
    jumpButton.Position = UDim2.new(0, 25, 0, 50)
    jumpButton.Text = "Ativar Altura do Pulo"
    jumpButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    jumpButton.Parent = frame

    jumpButton.MouseButton1Click:Connect(function()
        playerSettings.jumpHeight.enabled = not playerSettings.jumpHeight.enabled
        jumpButton.Text = playerSettings.jumpHeight.enabled and "Ativar Altura do Pulo" or "Desativar Altura do Pulo"
        applyCharacterSettings(player)
    end)

    -- Criar um botão para ativar/desativar a gravidade
    local gravityButton = Instance.new("TextButton")
    gravityButton.Size = UDim2.new(0, 250, 0, 30)
    gravityButton.Position = UDim2.new(0, 25, 0, 90)
    gravityButton.Text = "Ativar Gravidade"
    gravityButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    gravityButton.Parent = frame

    gravityButton.MouseButton1Click:Connect(function()
        playerSettings.gravity.enabled = not playerSettings.gravity.enabled
        gravityButton.Text = playerSettings.gravity.enabled and "Ativar Gravidade" or "Desativar Gravidade"
        applyCharacterSettings(player)
    end)

    -- Criar um botão para ativar/desativar o cooldown das skills
    local cooldownButton = Instance.new("TextButton")
    cooldownButton.Size = UDim2.new(0, 250, 0, 30)
    cooldownButton.Position = UDim2.new(0, 25, 0, 130)
    cooldownButton.Text = "Ativar Cooldown das Skills"
    cooldownButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    cooldownButton.Parent = frame

    cooldownButton.MouseButton1Click:Connect(function()
        playerSettings.skillCooldown.enabled = not playerSettings.skillCooldown.enabled
        cooldownButton.Text = playerSettings.skillCooldown.enabled and "Ativar Cooldown das Skills" or "Desativar Cooldown das Skills"
        applyCharacterSettings(player)
    end)
end

-- Função principal para iniciar a interface quando o jogador entra
local player = game.Players.LocalPlayer
createOptionsGUI(player)

-- Aplicar as configurações iniciais
applyCharacterSettings(player)
