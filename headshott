-- Silent Aim baseado em Raycast Hook
-- Adaptado para funcionar com maioria dos jogos (incluindo armas com raycast)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Função para encontrar a cabeça mais próxima do centro da tela
local function getClosestEnemyHead()
    local closestHead = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local screenPoint, onScreen = Camera:WorldToViewportPoint(head.Position)
            if onScreen then
                local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestHead = head
                end
            end
        end
    end

    return closestHead
end

-- Hooka o Raycast (forma mais comum de detectar acertos em jogos modernos)
local mt = getrawmetatable(game)
local oldRaycast = mt.__namecall

setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if method == "Raycast" and self == workspace then
        local targetHead = getClosestEnemyHead()
        if targetHead then
            local origin = args[1]
            local direction = (targetHead.Position - origin).Unit * (targetHead.Position - origin).Magnitude
            args[2] = direction
            return oldRaycast(self, unpack(args))
        end
    end

    return oldRaycast(self, ...)
end)

setreadonly(mt, true)
